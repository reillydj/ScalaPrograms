package recfun
import common._

object Main {
  def main(args: Array[String]) {
    println("Pascal's Triangle")
    for (row <- 0 to 10) {
      for (col <- 0 to row)
        print(pascal(col, row) + " ")
      println()
    }
    println("Balanced Parens")
    val string = "I told him (that it’s not (yet) done). (But he wasn’t listening)"
    val list_of_strings = string.toList
    println(balance(list_of_strings))
    
  }

  /**
   * Exercise 1
   */
  def pascal(c: Int, r: Int): Int = {
    if ((c == 0 && r == 0) || (c == r) || (c == 0)) 1
    else pascal(c - 1, r - 1) + pascal(c, r - 1)
  }

  /**
   * Exercise 2
   */
  def balance(chars: List[Char]): Boolean = {
    println(chars)
    val parens = chars.filter(x => x == "(" || x == ")")
    println(parens)
    true
  }

  /**
   * Exercise 3
   */
  def countChange(money: Int, coins: List[Int]): Int = ???
}
